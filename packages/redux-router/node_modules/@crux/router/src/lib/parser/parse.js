"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const escape_regexes_1 = require("./escape-regexes");
const get_hash_1 = require("./get-hash");
const parse_paths_1 = require("./parse-paths");
const parse_queries_1 = require("./parse-queries");
const parse_segment_1 = require("./parse-segment");
const path_to_url_1 = require("./path-to-url");
const split_path_1 = require("./split-path");
const trim_slashes_1 = require("./trim-slashes");
/**
 * Parse a pattern, returning a decodeURL function.
 */
function parse(pattern) {
    if (pattern[0] !== '/') {
        throw new Error('Must start with /');
    }
    const target = (0, path_to_url_1.pathToURL)((0, escape_regexes_1.escapeRegexes)((0, trim_slashes_1.trimSlashes)(pattern)));
    const targetSegments = (0, split_path_1.splitPath)((0, trim_slashes_1.trimSlashes)(target.pathname));
    const targetHash = (0, get_hash_1.getHash)(target.hash);
    const pq = (0, parse_queries_1.parseQueries)(target.searchParams);
    const pp = (0, parse_paths_1.parsePaths)(targetSegments);
    const ph = (0, parse_segment_1.parseSegment)(targetHash);
    return function decodeURL(urlString) {
        const route = new URL(urlString);
        const params = {};
        if (pp((0, split_path_1.splitPath)((0, trim_slashes_1.trimSlashes)(route.pathname)), params) &&
            pq(route.searchParams, params) &&
            ph((0, get_hash_1.getHash)(route.hash), params)) {
            return params;
        }
        return null;
    };
}
exports.parse = parse;
//# sourceMappingURL=parse.js.map