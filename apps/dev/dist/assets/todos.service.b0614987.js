function S(t,o){return{onDrag:c,onDrop:g,onEnter:r,onExit:v};function c(n){t.setDraggingTaskId(n)}async function g(n){t.setDraggingTaskId(null);const i=t.getTasks(),u=t.getHoveringState();if(!u)return;const{ndx:e,status:a}=u;if(e!==void 0&&a!==void 0){const f=i.filter(s=>s.status===a).findIndex(s=>s.id===n),d=i.find(s=>s.id===n);if(a===d.status&&Math.abs(f-e)<1)return;const x=e<1?Math.floor(e):Math.ceil(e);try{await t.updateTask({...d,status:a},x),o.toast({duration:4e3,text:`Task moved to ${a}.`,variant:"success"})}catch{o.toast({duration:4e3,text:`Failed to move task to ${a}.`,variant:"danger"})}}}function r(n,i){t.setHoveringState({ndx:n,status:i})}function v(){t.setHoveringState(null)}}export{S as todosService};
